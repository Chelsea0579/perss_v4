{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-test\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex align-center mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"text-right\"\n};\nconst _hoisted_4 = {\n  class: \"text-h6\"\n};\nconst _hoisted_5 = {\n  class: \"reading-passage\"\n};\nconst _hoisted_6 = {\n  class: \"reading-content\"\n};\nconst _hoisted_7 = {\n  class: \"text-h6 mb-3\"\n};\nconst _hoisted_8 = {\n  class: \"question-header d-flex align-center mb-2\"\n};\nconst _hoisted_9 = {\n  class: \"text-subtitle-1\"\n};\nconst _hoisted_10 = {\n  class: \"question-content mb-2\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"answer-section\"\n};\nconst _hoisted_13 = {\n  class: \"d-flex\"\n};\nconst _hoisted_14 = {\n  class: \"d-flex mt-2\"\n};\nconst _hoisted_15 = {\n  class: \"text-success\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"text-warning\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_skeleton_loader = _resolveComponent(\"v-skeleton-loader\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_card, null, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"text-h5 primary--text d-flex align-center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\",\n        icon: \"mdi-file-check-outline\"\n      }), _createTextVNode(\" 阅读后测 - 试卷 \" + _toDisplayString($props.id) + \" \", 1 /* TEXT */), !$setup.examCompleted ? (_openBlock(), _createBlock(_component_v_chip, {\n        key: 0,\n        class: \"ml-auto\",\n        color: \"warning\"\n      }, {\n        default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"进行中\")])),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_v_chip, {\n        key: 1,\n        class: \"ml-auto\",\n        color: \"success\"\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"已完成\")])),\n        _: 1 /* STABLE */\n      }))]),\n      _: 1 /* STABLE */\n    }), !$setup.examData ? (_openBlock(), _createBlock(_component_v_card_text, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_skeleton_loader, {\n        type: \"article\"\n      })]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createVNode(_component_v_card_text, {\n      class: \"pb-0\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", {\n        class: \"text-subtitle-1\"\n      }, \"剩余时间：\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"text-h6\", {\n          'red--text': $setup.timeLeft < 300\n        }])\n      }, _toDisplayString($setup.formatTime($setup.timeLeft)), 3 /* TEXT, CLASS */)]), _createVNode(_component_v_spacer), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n        class: \"text-subtitle-1\"\n      }, \"得分：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.examCompleted ? $setup.score : '-') + \"/100\", 1 /* TEXT */)])]), _createVNode(_component_v_divider, {\n        class: \"mb-4\"\n      }), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", {\n        class: \"text-h6 mb-3\"\n      }, \"阅读原文\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.examData.content), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_card_text, null, {\n      default: _withCtx(() => [_createElementVNode(\"h3\", _hoisted_7, \"题目（共\" + _toDisplayString($setup.examData.questions.length) + \"题，每题\" + _toDisplayString($setup.questionScore) + \"分）\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.examData.questions, (question, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: `question-${index}`,\n          class: \"question-item mb-6\"\n        }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"h4\", _hoisted_9, \"问题 \" + _toDisplayString(index + 1), 1 /* TEXT */), _createVNode(_component_v_spacer), $setup.examCompleted ? (_openBlock(), _createBlock(_component_v_chip, {\n          key: 0,\n          color: $setup.isAnswerCorrect(index) ? 'success' : 'error',\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isAnswerCorrect(index) ? '正确' : '错误'), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(question.question), 1 /* TEXT */), !$setup.examCompleted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_v_text_field, {\n          modelValue: $setup.answers[index],\n          \"onUpdate:modelValue\": $event => $setup.answers[index] = $event,\n          label: \"请输入您的答案\",\n          variant: \"outlined\",\n          density: \"comfortable\",\n          disabled: $setup.examCompleted\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n          class: \"text-subtitle-2 mr-2\"\n        }, \"您的答案：\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n          class: _normalizeClass({\n            'text-success': $setup.isAnswerCorrect(index),\n            'text-error': !$setup.isAnswerCorrect(index)\n          })\n        }, _toDisplayString($setup.answers[index] || '未作答'), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_14, [_cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n          class: \"text-subtitle-2 mr-2\"\n        }, \"正确答案：\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(question.answer), 1 /* TEXT */)])]))]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_divider), _createVNode(_component_v_card_actions, null, {\n      default: _withCtx(() => [$props.id == 3 && !$setup.examCompleted ? (_openBlock(), _createBlock(_component_v_btn, {\n        key: 0,\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: $setup.confirmReset\n      }, {\n        default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\" 重置 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_spacer), !$setup.examCompleted ? (_openBlock(), _createBlock(_component_v_btn, {\n        key: 1,\n        color: \"primary\",\n        variant: \"flat\",\n        loading: $setup.loading,\n        disabled: !$setup.canSubmit,\n        onClick: $setup.submitExam\n      }, {\n        default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\" 提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"disabled\", \"onClick\"])) : $props.id == 3 ? (_openBlock(), _createBlock(_component_v_btn, {\n        key: 2,\n        color: \"primary\",\n        variant: \"flat\",\n        to: {\n          name: 'PostTest',\n          params: {\n            id: 4\n          }\n        }\n      }, {\n        default: _withCtx(() => [_cache[13] || (_cache[13] = _createTextVNode(\" 下一份试卷 \")), _createVNode(_component_v_icon, {\n          end: \"\",\n          icon: \"mdi-arrow-right\"\n        })]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_v_btn, {\n        key: 3,\n        color: \"primary\",\n        variant: \"flat\",\n        to: {\n          name: 'StrategyPostTest'\n        }\n      }, {\n        default: _withCtx(() => [_cache[14] || (_cache[14] = _createTextVNode(\" 继续 \")), _createVNode(_component_v_icon, {\n          end: \"\",\n          icon: \"mdi-arrow-right\"\n        })]),\n        _: 1 /* STABLE */\n      }))]),\n      _: 1 /* STABLE */\n    })], 64 /* STABLE_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 确认对话框 \"), _createVNode(_component_v_dialog, {\n    modelValue: $setup.confirmResetDialog,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.confirmResetDialog = $event),\n    \"max-width\": \"400\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"确认重置\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\" 您确定要重置所有答案吗？此操作不可撤销。 \")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n          variant: \"text\",\n          onClick: _cache[0] || (_cache[0] = $event => $setup.confirmResetDialog = false)\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\"取消\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_btn, {\n          color: \"error\",\n          onClick: $setup.resetAnswers\n        }, {\n          default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"确认\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" 提交确认对话框 \"), _createVNode(_component_v_dialog, {\n    modelValue: $setup.confirmSubmitDialog,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.confirmSubmitDialog = $event),\n    \"max-width\": \"400\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"确认提交\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_cache[20] || (_cache[20] = _createElementVNode(\"p\", null, \"您确定要提交答案吗？提交后将无法修改。\", -1 /* HOISTED */)), $setup.unansweredCount > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_16, \" 您还有 \" + _toDisplayString($setup.unansweredCount) + \" 题未作答。 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n          variant: \"text\",\n          onClick: _cache[2] || (_cache[2] = $event => $setup.confirmSubmitDialog = false)\n        }, {\n          default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"取消\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $setup.confirmSubmit\n        }, {\n          default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"确认提交\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_v_card","default","_withCtx","_component_v_card_title","_component_v_icon","start","icon","_createTextVNode","_toDisplayString","$props","id","$setup","examCompleted","_createBlock","_component_v_chip","color","_cache","_","examData","_component_v_card_text","_component_v_skeleton_loader","type","_Fragment","_createElementVNode","_hoisted_2","_normalizeClass","timeLeft","formatTime","_component_v_spacer","_hoisted_3","_hoisted_4","score","_component_v_divider","_hoisted_5","_hoisted_6","content","_hoisted_7","questions","length","questionScore","_renderList","question","index","_hoisted_8","_hoisted_9","isAnswerCorrect","size","_createCommentVNode","_hoisted_10","_hoisted_11","_component_v_text_field","modelValue","answers","$event","label","variant","density","disabled","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","answer","_component_v_card_actions","_component_v_btn","onClick","confirmReset","loading","canSubmit","submitExam","to","name","params","end","_component_v_dialog","confirmResetDialog","resetAnswers","confirmSubmitDialog","unansweredCount","_hoisted_16","confirmSubmit"],"sources":["D:\\PycharmProjects\\perss_v4\\frontend\\src\\views\\feedback\\PostTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-test\">\r\n    <v-card>\r\n      <v-card-title class=\"text-h5 primary--text d-flex align-center\">\r\n        <v-icon start icon=\"mdi-file-check-outline\"></v-icon>\r\n        阅读后测 - 试卷 {{ id }}\r\n        <v-chip class=\"ml-auto\" color=\"warning\" v-if=\"!examCompleted\">进行中</v-chip>\r\n        <v-chip class=\"ml-auto\" color=\"success\" v-else>已完成</v-chip>\r\n      </v-card-title>\r\n\r\n      <v-card-text v-if=\"!examData\">\r\n        <v-skeleton-loader type=\"article\"></v-skeleton-loader>\r\n      </v-card-text>\r\n\r\n      <template v-else>\r\n        <v-card-text class=\"pb-0\">\r\n          <div class=\"d-flex align-center mb-4\">\r\n            <div>\r\n              <h3 class=\"text-subtitle-1\">剩余时间：</h3>\r\n              <div class=\"text-h6\" :class=\"{'red--text': timeLeft < 300}\">\r\n                {{ formatTime(timeLeft) }}\r\n              </div>\r\n            </div>\r\n\r\n            <v-spacer></v-spacer>\r\n\r\n            <div class=\"text-right\">\r\n              <h3 class=\"text-subtitle-1\">得分：</h3>\r\n              <div class=\"text-h6\">{{ examCompleted ? score : '-' }}/100</div>\r\n            </div>\r\n          </div>\r\n\r\n          <v-divider class=\"mb-4\"></v-divider>\r\n\r\n          <div class=\"reading-passage\">\r\n            <h3 class=\"text-h6 mb-3\">阅读原文</h3>\r\n            <div class=\"reading-content\">{{ examData.content }}</div>\r\n          </div>\r\n        </v-card-text>\r\n\r\n        <v-card-text>\r\n          <h3 class=\"text-h6 mb-3\">题目（共{{ examData.questions.length }}题，每题{{ questionScore }}分）</h3>\r\n\r\n          <div\r\n            v-for=\"(question, index) in examData.questions\"\r\n            :key=\"`question-${index}`\"\r\n            class=\"question-item mb-6\"\r\n          >\r\n            <div class=\"question-header d-flex align-center mb-2\">\r\n              <h4 class=\"text-subtitle-1\">问题 {{ index + 1 }}</h4>\r\n              <v-spacer></v-spacer>\r\n              <v-chip\r\n                v-if=\"examCompleted\"\r\n                :color=\"isAnswerCorrect(index) ? 'success' : 'error'\"\r\n                size=\"small\"\r\n              >\r\n                {{ isAnswerCorrect(index) ? '正确' : '错误' }}\r\n              </v-chip>\r\n            </div>\r\n\r\n            <div class=\"question-content mb-2\">{{ question.question }}</div>\r\n\r\n            <div v-if=\"!examCompleted\">\r\n              <v-text-field\r\n                v-model=\"answers[index]\"\r\n                label=\"请输入您的答案\"\r\n                variant=\"outlined\"\r\n                density=\"comfortable\"\r\n                :disabled=\"examCompleted\"\r\n              ></v-text-field>\r\n            </div>\r\n\r\n            <div v-else class=\"answer-section\">\r\n              <div class=\"d-flex\">\r\n                <div class=\"text-subtitle-2 mr-2\">您的答案：</div>\r\n                <div :class=\"{'text-success': isAnswerCorrect(index), 'text-error': !isAnswerCorrect(index)}\">\r\n                  {{ answers[index] || '未作答' }}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"d-flex mt-2\">\r\n                <div class=\"text-subtitle-2 mr-2\">正确答案：</div>\r\n                <div class=\"text-success\">{{ question.answer }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </v-card-text>\r\n\r\n        <v-divider></v-divider>\r\n\r\n        <v-card-actions>\r\n          <v-btn\r\n            v-if=\"id == 3 && !examCompleted\"\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            @click=\"confirmReset\"\r\n          >\r\n            重置\r\n          </v-btn>\r\n\r\n          <v-spacer></v-spacer>\r\n\r\n          <v-btn\r\n            v-if=\"!examCompleted\"\r\n            color=\"primary\"\r\n            variant=\"flat\"\r\n            :loading=\"loading\"\r\n            :disabled=\"!canSubmit\"\r\n            @click=\"submitExam\"\r\n          >\r\n            提交\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            v-else-if=\"id == 3\"\r\n            color=\"primary\"\r\n            variant=\"flat\"\r\n            :to=\"{ name: 'PostTest', params: { id: 4 } }\"\r\n          >\r\n            下一份试卷\r\n            <v-icon end icon=\"mdi-arrow-right\"></v-icon>\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            v-else\r\n            color=\"primary\"\r\n            variant=\"flat\"\r\n            :to=\"{ name: 'StrategyPostTest' }\"\r\n          >\r\n            继续\r\n            <v-icon end icon=\"mdi-arrow-right\"></v-icon>\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </template>\r\n    </v-card>\r\n\r\n    <!-- 确认对话框 -->\r\n    <v-dialog v-model=\"confirmResetDialog\" max-width=\"400\">\r\n      <v-card>\r\n        <v-card-title>确认重置</v-card-title>\r\n        <v-card-text>\r\n          您确定要重置所有答案吗？此操作不可撤销。\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn variant=\"text\" @click=\"confirmResetDialog = false\">取消</v-btn>\r\n          <v-btn color=\"error\" @click=\"resetAnswers\">确认</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- 提交确认对话框 -->\r\n    <v-dialog v-model=\"confirmSubmitDialog\" max-width=\"400\">\r\n      <v-card>\r\n        <v-card-title>确认提交</v-card-title>\r\n        <v-card-text>\r\n          <p>您确定要提交答案吗？提交后将无法修改。</p>\r\n          <p v-if=\"unansweredCount > 0\" class=\"text-warning\">\r\n            您还有 {{ unansweredCount }} 题未作答。\r\n          </p>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn variant=\"text\" @click=\"confirmSubmitDialog = false\">取消</v-btn>\r\n          <v-btn color=\"primary\" @click=\"confirmSubmit\">确认提交</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onBeforeUnmount, watch } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'PostTest',\r\n\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n\r\n  setup(props) {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    // 考试数据\r\n    const examId = computed(() => parseInt(props.id));\r\n    const examData = ref(null);\r\n    const answers = ref([]);\r\n    const examCompleted = ref(false);\r\n    const score = ref(0);\r\n    const questionScore = ref(10); // 每题10分\r\n    const wrongQuestions = ref([]);\r\n\r\n    // 对话框状态\r\n    const confirmResetDialog = ref(false);\r\n    const confirmSubmitDialog = ref(false);\r\n\r\n    // 计时器\r\n    const timeLeft = ref(1800); // 30分钟 = 1800秒\r\n    let timer = null;\r\n\r\n    // 读取考试数据\r\n    const loadExamData = async () => {\r\n      const response = await store.dispatch('fetchExam', examId.value);\r\n\r\n      if (response) {\r\n        examData.value = response;\r\n        // 初始化答案数组\r\n        answers.value = new Array(response.questions.length).fill('');\r\n\r\n        // 开始计时\r\n        startTimer();\r\n      }\r\n    };\r\n\r\n    // 开始计时\r\n    const startTimer = () => {\r\n      if (timer) clearInterval(timer);\r\n\r\n      timer = setInterval(() => {\r\n        if (timeLeft.value > 0) {\r\n          timeLeft.value--;\r\n        } else {\r\n          // 时间到，自动提交\r\n          clearInterval(timer);\r\n          if (!examCompleted.value) {\r\n            submitExam();\r\n          }\r\n        }\r\n      }, 1000);\r\n    };\r\n\r\n    // 格式化时间\r\n    const formatTime = (seconds) => {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    // 计算未作答题目数量\r\n    const unansweredCount = computed(() => {\r\n      return answers.value.filter(answer => !answer.trim()).length;\r\n    });\r\n\r\n    // 判断是否可以提交\r\n    const canSubmit = computed(() => {\r\n      return answers.value.some(answer => answer.trim() !== '');\r\n    });\r\n\r\n    // 确认重置对话框\r\n    const confirmReset = () => {\r\n      confirmResetDialog.value = true;\r\n    };\r\n\r\n    // 重置答案\r\n    const resetAnswers = () => {\r\n      answers.value = new Array(examData.value.questions.length).fill('');\r\n      confirmResetDialog.value = false;\r\n    };\r\n\r\n    // 提交前确认\r\n    const submitExam = () => {\r\n      confirmSubmitDialog.value = true;\r\n    };\r\n\r\n    // 确认提交\r\n    const confirmSubmit = async () => {\r\n      confirmSubmitDialog.value = false;\r\n\r\n      // 计算得分\r\n      let earnedScore = 0;\r\n      wrongQuestions.value = [];\r\n\r\n      examData.value.questions.forEach((question, index) => {\r\n        const userAnswer = answers.value[index].trim().toLowerCase();\r\n        const correctAnswer = question.answer.trim().toLowerCase();\r\n\r\n        if (userAnswer === correctAnswer) {\r\n          earnedScore += questionScore.value;\r\n        } else {\r\n          // 记录错题，格式：examId-questionNumber\r\n          wrongQuestions.value.push(`${examId.value}-${index + 1}`);\r\n        }\r\n      });\r\n\r\n      score.value = earnedScore;\r\n      examCompleted.value = true;\r\n\r\n      // 保存结果到服务器\r\n      await store.dispatch('submitExamResult', {\r\n        examId: examId.value,\r\n        score: score.value,\r\n        wrongQuestions: wrongQuestions.value\r\n      });\r\n\r\n      // 停止计时器\r\n      clearInterval(timer);\r\n    };\r\n\r\n    // 判断答案是否正确\r\n    const isAnswerCorrect = (index) => {\r\n      const userAnswer = answers.value[index].trim().toLowerCase();\r\n      const correctAnswer = examData.value.questions[index].answer.trim().toLowerCase();\r\n      return userAnswer === correctAnswer;\r\n    };\r\n\r\n    // 组件挂载时\r\n    onMounted(() => {\r\n      loadExamData();\r\n    });\r\n\r\n    // 组件卸载前清除计时器\r\n    onBeforeUnmount(() => {\r\n      if (timer) {\r\n        clearInterval(timer);\r\n      }\r\n    });\r\n\r\n    // 监听路由变化，重新加载考试数据\r\n    watch(() => props.id, (newId) => {\r\n      examId.value = parseInt(newId);\r\n      examCompleted.value = false;\r\n      score.value = 0;\r\n      timeLeft.value = 1800;\r\n      loadExamData();\r\n    });\r\n\r\n    return {\r\n      examId,\r\n      examData,\r\n      answers,\r\n      examCompleted,\r\n      score,\r\n      questionScore,\r\n      wrongQuestions,\r\n      timeLeft,\r\n      confirmResetDialog,\r\n      confirmSubmitDialog,\r\n      unansweredCount,\r\n      canSubmit,\r\n      formatTime,\r\n      confirmReset,\r\n      resetAnswers,\r\n      submitExam,\r\n      confirmSubmit,\r\n      isAnswerCorrect,\r\n      loading: computed(() => store.state.loading)\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.post-test {\r\n  max-width: 100%;\r\n}\r\n\r\n.reading-passage {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.reading-content {\r\n  background-color: #f8f9fa;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  white-space: pre-line;\r\n  line-height: 1.6;\r\n}\r\n\r\n.question-item {\r\n  border-left: 3px solid #e0e0e0;\r\n  padding-left: 16px;\r\n}\r\n\r\n.text-success {\r\n  color: #4caf50;\r\n}\r\n\r\n.text-error {\r\n  color: #f44336;\r\n}\r\n\r\n.text-warning {\r\n  color: #ff9800;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}