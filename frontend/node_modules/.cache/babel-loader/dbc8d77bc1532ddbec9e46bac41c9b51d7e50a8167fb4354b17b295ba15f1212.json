{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // 计算属性\n    const loading = computed(() => store.state.loading);\n    const error = computed(() => store.state.error);\n    const userName = computed(() => store.state.userName);\n    const isAuthenticated = computed(() => store.getters.isAuthenticated);\n    const currentPhase = computed(() => store.getters.getCurrentPhase);\n\n    // 路由分组\n    const routes = router.getRoutes();\n    const planningRoutes = computed(() => routes.filter(route => route.meta?.phase === 'planning').sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0)));\n    const executionRoutes = computed(() => routes.filter(route => route.meta?.phase === 'execution').sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0)));\n    const feedbackRoutes = computed(() => routes.filter(route => route.meta?.phase === 'feedback').sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0)));\n\n    // 路由图标\n    const getRouteIcon = route => {\n      const icons = {\n        'Introduction': 'mdi-information-outline',\n        'SelfRate': 'mdi-checkbox-marked-circle-outline',\n        'UserProfile': 'mdi-account-outline',\n        'PreTest': 'mdi-file-document-outline',\n        'StrategyPreTest': 'mdi-clipboard-list-outline',\n        'AIInteraction': 'mdi-robot-outline',\n        'PostTest': 'mdi-file-check-outline',\n        'StrategyPostTest': 'mdi-clipboard-check-outline',\n        'Summary': 'mdi-chart-bar'\n      };\n      return icons[route.name] || 'mdi-circle-outline';\n    };\n\n    // 路由禁用逻辑\n    const isProgressDisabled = route => {\n      const phases = ['planning', 'execution', 'feedback'];\n      const currentPhaseIndex = phases.indexOf(currentPhase.value);\n      const routePhaseIndex = phases.indexOf(route.meta?.phase);\n\n      // 如果路由阶段在当前阶段之后，则禁用\n      if (routePhaseIndex > currentPhaseIndex) {\n        return true;\n      }\n\n      // 如果是前测页面，根据参数确定\n      if (route.name === 'PreTest') {\n        const id = parseInt(route.path.split('/').pop());\n        // 只允许访问试卷1和2\n        return id > 2;\n      }\n\n      // 如果是后测页面，根据参数确定\n      if (route.name === 'PostTest') {\n        const id = parseInt(route.path.split('/').pop());\n        // 只允许访问试卷3和4\n        return id < 3;\n      }\n      return false;\n    };\n\n    // 清除错误\n    const clearError = () => {\n      store.commit('SET_ERROR', null);\n    };\n\n    // 组件挂载时\n    onMounted(() => {\n      // 如果已登录，获取用户信息\n      if (isAuthenticated.value) {\n        store.dispatch('fetchUserProfile');\n      }\n    });\n    return {\n      loading,\n      error,\n      userName,\n      isAuthenticated,\n      currentPhase,\n      planningRoutes,\n      executionRoutes,\n      feedbackRoutes,\n      getRouteIcon,\n      isProgressDisabled,\n      clearError\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","useStore","useRouter","name","setup","store","router","loading","state","error","userName","isAuthenticated","getters","currentPhase","getCurrentPhase","routes","getRoutes","planningRoutes","filter","route","meta","phase","sort","a","b","order","executionRoutes","feedbackRoutes","getRouteIcon","icons","isProgressDisabled","phases","currentPhaseIndex","indexOf","value","routePhaseIndex","id","parseInt","path","split","pop","clearError","commit","dispatch"],"sources":["D:\\PycharmProjects\\perss_v4\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <v-app-bar color=\"primary\" density=\"compact\" elevation=\"2\">\r\n      <v-app-bar-title>个性化英语阅读支持系统 (PERSS)</v-app-bar-title>\r\n      <v-spacer></v-spacer>\r\n      <v-chip v-if=\"userName\" color=\"info\" class=\"ml-2\">\r\n        <v-icon start icon=\"mdi-account\"></v-icon>\r\n        {{ userName }}\r\n      </v-chip>\r\n    </v-app-bar>\r\n\r\n    <v-main>\r\n      <v-container fluid>\r\n        <v-row>\r\n          <v-col cols=\"12\" md=\"3\" v-if=\"isAuthenticated\">\r\n            <v-card>\r\n              <v-list>\r\n                <v-list-subheader>计划阶段</v-list-subheader>\r\n                <v-list-item\r\n                  v-for=\"item in planningRoutes\"\r\n                  :key=\"item.path\"\r\n                  :to=\"item.path\"\r\n                  :value=\"item.path\"\r\n                  :title=\"item.meta.title\"\r\n                  :disabled=\"isProgressDisabled(item)\"\r\n                >\r\n                  <template v-slot:prepend>\r\n                    <v-icon :icon=\"getRouteIcon(item)\"></v-icon>\r\n                  </template>\r\n                </v-list-item>\r\n\r\n                <v-list-subheader>执行阶段</v-list-subheader>\r\n                <v-list-item\r\n                  v-for=\"item in executionRoutes\"\r\n                  :key=\"item.path\"\r\n                  :to=\"item.path\"\r\n                  :value=\"item.path\"\r\n                  :title=\"item.meta.title\"\r\n                  :disabled=\"isProgressDisabled(item)\"\r\n                >\r\n                  <template v-slot:prepend>\r\n                    <v-icon :icon=\"getRouteIcon(item)\"></v-icon>\r\n                  </template>\r\n                </v-list-item>\r\n\r\n                <v-list-subheader>反馈阶段</v-list-subheader>\r\n                <v-list-item\r\n                  v-for=\"item in feedbackRoutes\"\r\n                  :key=\"item.path\"\r\n                  :to=\"item.path\"\r\n                  :value=\"item.path\"\r\n                  :title=\"item.meta.title\"\r\n                  :disabled=\"isProgressDisabled(item)\"\r\n                >\r\n                  <template v-slot:prepend>\r\n                    <v-icon :icon=\"getRouteIcon(item)\"></v-icon>\r\n                  </template>\r\n                </v-list-item>\r\n              </v-list>\r\n            </v-card>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" :md=\"isAuthenticated ? 9 : 12\">\r\n            <v-card>\r\n              <v-card-text>\r\n                <v-progress-linear\r\n                  v-if=\"loading\"\r\n                  indeterminate\r\n                  color=\"primary\"\r\n                ></v-progress-linear>\r\n\r\n                <v-alert\r\n                  v-if=\"error\"\r\n                  type=\"error\"\r\n                  variant=\"tonal\"\r\n                  closable\r\n                  @click:close=\"clearError\"\r\n                >\r\n                  {{ error }}\r\n                </v-alert>\r\n\r\n                <router-view></router-view>\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-container>\r\n    </v-main>\r\n\r\n    <v-footer app>\r\n      <div class=\"text-center w-100\">\r\n        &copy; {{ new Date().getFullYear() }} - 个性化英语阅读支持系统 (PERSS)\r\n      </div>\r\n    </v-footer>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'App',\r\n\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    // 计算属性\r\n    const loading = computed(() => store.state.loading);\r\n    const error = computed(() => store.state.error);\r\n    const userName = computed(() => store.state.userName);\r\n    const isAuthenticated = computed(() => store.getters.isAuthenticated);\r\n    const currentPhase = computed(() => store.getters.getCurrentPhase);\r\n\r\n    // 路由分组\r\n    const routes = router.getRoutes();\r\n\r\n    const planningRoutes = computed(() =>\r\n      routes\r\n        .filter(route => route.meta?.phase === 'planning')\r\n        .sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0))\r\n    );\r\n\r\n    const executionRoutes = computed(() =>\r\n      routes\r\n        .filter(route => route.meta?.phase === 'execution')\r\n        .sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0))\r\n    );\r\n\r\n    const feedbackRoutes = computed(() =>\r\n      routes\r\n        .filter(route => route.meta?.phase === 'feedback')\r\n        .sort((a, b) => (a.meta?.order || 0) - (b.meta?.order || 0))\r\n    );\r\n\r\n    // 路由图标\r\n    const getRouteIcon = (route) => {\r\n      const icons = {\r\n        'Introduction': 'mdi-information-outline',\r\n        'SelfRate': 'mdi-checkbox-marked-circle-outline',\r\n        'UserProfile': 'mdi-account-outline',\r\n        'PreTest': 'mdi-file-document-outline',\r\n        'StrategyPreTest': 'mdi-clipboard-list-outline',\r\n        'AIInteraction': 'mdi-robot-outline',\r\n        'PostTest': 'mdi-file-check-outline',\r\n        'StrategyPostTest': 'mdi-clipboard-check-outline',\r\n        'Summary': 'mdi-chart-bar'\r\n      };\r\n\r\n      return icons[route.name] || 'mdi-circle-outline';\r\n    };\r\n\r\n    // 路由禁用逻辑\r\n    const isProgressDisabled = (route) => {\r\n      const phases = ['planning', 'execution', 'feedback'];\r\n      const currentPhaseIndex = phases.indexOf(currentPhase.value);\r\n      const routePhaseIndex = phases.indexOf(route.meta?.phase);\r\n\r\n      // 如果路由阶段在当前阶段之后，则禁用\r\n      if (routePhaseIndex > currentPhaseIndex) {\r\n        return true;\r\n      }\r\n\r\n      // 如果是前测页面，根据参数确定\r\n      if (route.name === 'PreTest') {\r\n        const id = parseInt(route.path.split('/').pop());\r\n        // 只允许访问试卷1和2\r\n        return id > 2;\r\n      }\r\n\r\n      // 如果是后测页面，根据参数确定\r\n      if (route.name === 'PostTest') {\r\n        const id = parseInt(route.path.split('/').pop());\r\n        // 只允许访问试卷3和4\r\n        return id < 3;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    // 清除错误\r\n    const clearError = () => {\r\n      store.commit('SET_ERROR', null);\r\n    };\r\n\r\n    // 组件挂载时\r\n    onMounted(() => {\r\n      // 如果已登录，获取用户信息\r\n      if (isAuthenticated.value) {\r\n        store.dispatch('fetchUserProfile');\r\n      }\r\n    });\r\n\r\n    return {\r\n      loading,\r\n      error,\r\n      userName,\r\n      isAuthenticated,\r\n      currentPhase,\r\n      planningRoutes,\r\n      executionRoutes,\r\n      feedbackRoutes,\r\n      getRouteIcon,\r\n      isProgressDisabled,\r\n      clearError\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-application {\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n\r\n.v-card {\r\n  margin-bottom: 16px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}